== Iter 1 res
 ==('def', 0, (0, 3), <TokenType.KEYWORD: 5>, None)
('fibbonachi', 0, (4, 14), <TokenType.IDENTIFIER: 6>, None)
('(', 0, (14, 15), <TokenType.DIVIDER: 3>, None)
('n', 0, (15, 16), <TokenType.IDENTIFIER: 6>, None)
(':', 0, (16, 17), <TokenType.DIVIDER: 3>, None)
('int', 0, (18, 21), <TokenType.IDENTIFIER: 6>, None)
('=', 0, (22, 23), <TokenType.OPERATOR: 4>, None)
('1', 0, (0, 1), <TokenType.NUMBER_LITERAL: 2>, <_NumbersSubType.INTEGER: 0>)
(')', 0, (25, 26), <TokenType.DIVIDER: 3>, None)
(':', 0, (26, 27), <TokenType.DIVIDER: 3>, None)
('\n', 0, (27, 28), <TokenType.ENTERS: 7>, None)
('sequence', 4, (32, 40), <TokenType.IDENTIFIER: 6>, None)
('=', 4, (41, 42), <TokenType.OPERATOR: 4>, None)
('[', 4, (43, 44), <TokenType.DIVIDER: 3>, None)
(']', 4, (44, 45), <TokenType.DIVIDER: 3>, None)
('\n', 0, (45, 46), <TokenType.ENTERS: 7>, None)
('if', 4, (50, 52), <TokenType.KEYWORD: 5>, None)
('n', 4, (53, 54), <TokenType.IDENTIFIER: 6>, None)
('<=', 4, (55, 57), <TokenType.OPERATOR: 4>, None)
('0', 4, (0, 1), <TokenType.NUMBER_LITERAL: 2>, <_NumbersSubType.INTEGER: 0>)
(':', 4, (59, 60), <TokenType.DIVIDER: 3>, None)
('\n', 0, (60, 61), <TokenType.ENTERS: 7>, None)
('return', 8, (69, 75), <TokenType.KEYWORD: 5>, None)
('sequence', 8, (76, 84), <TokenType.IDENTIFIER: 6>, None)
('\n', 0, (84, 85), <TokenType.ENTERS: 7>, None)
('if', 4, (89, 91), <TokenType.KEYWORD: 5>, None)
('n', 4, (92, 93), <TokenType.IDENTIFIER: 6>, None)
('>=', 4, (94, 96), <TokenType.OPERATOR: 4>, None)
('1', 4, (0, 1), <TokenType.NUMBER_LITERAL: 2>, <_NumbersSubType.INTEGER: 0>)
(':', 4, (98, 99), <TokenType.DIVIDER: 3>, None)
('\n', 0, (99, 100), <TokenType.ENTERS: 7>, None)
('sequence', 8, (108, 116), <TokenType.IDENTIFIER: 6>, None)
('.', 8, (116, 117), <TokenType.DIVIDER: 3>, None)
('append', 8, (117, 123), <TokenType.IDENTIFIER: 6>, None)
('(', 8, (123, 124), <TokenType.DIVIDER: 3>, None)
('1', 8, (0, 1), <TokenType.NUMBER_LITERAL: 2>, <_NumbersSubType.INTEGER: 0>)
(')', 8, (125, 126), <TokenType.DIVIDER: 3>, None)
('\n', 0, (126, 127), <TokenType.ENTERS: 7>, None)
('if', 4, (131, 133), <TokenType.KEYWORD: 5>, None)
('n', 4, (134, 135), <TokenType.IDENTIFIER: 6>, None)
('>=', 4, (136, 138), <TokenType.OPERATOR: 4>, None)
('2', 4, (0, 1), <TokenType.NUMBER_LITERAL: 2>, <_NumbersSubType.INTEGER: 0>)
(':', 4, (140, 141), <TokenType.DIVIDER: 3>, None)
('\n', 0, (141, 142), <TokenType.ENTERS: 7>, None)
('sequence', 8, (150, 158), <TokenType.IDENTIFIER: 6>, None)
('.', 8, (158, 159), <TokenType.DIVIDER: 3>, None)
('append', 8, (159, 165), <TokenType.IDENTIFIER: 6>, None)
('(', 8, (165, 166), <TokenType.DIVIDER: 3>, None)
('1', 8, (0, 1), <TokenType.NUMBER_LITERAL: 2>, <_NumbersSubType.INTEGER: 0>)
(')', 8, (167, 168), <TokenType.DIVIDER: 3>, None)
('\n', 0, (168, 169), <TokenType.ENTERS: 7>, None)
('for', 4, (173, 176), <TokenType.KEYWORD: 5>, None)
('i', 4, (177, 178), <TokenType.IDENTIFIER: 6>, None)
('in', 4, (179, 181), <TokenType.OPERATOR: 4>, None)
('range', 4, (182, 187), <TokenType.IDENTIFIER: 6>, None)
('(', 4, (187, 188), <TokenType.DIVIDER: 3>, None)
('2', 4, (0, 1), <TokenType.NUMBER_LITERAL: 2>, <_NumbersSubType.INTEGER: 0>)
(',', 4, (189, 190), <TokenType.DIVIDER: 3>, None)
('n', 4, (191, 192), <TokenType.IDENTIFIER: 6>, None)
(')', 4, (192, 193), <TokenType.DIVIDER: 3>, None)
(':', 4, (193, 194), <TokenType.DIVIDER: 3>, None)
('\n', 0, (194, 195), <TokenType.ENTERS: 7>, None)
('sequence', 8, (203, 211), <TokenType.IDENTIFIER: 6>, None)
('.', 8, (211, 212), <TokenType.DIVIDER: 3>, None)
('append', 8, (212, 218), <TokenType.IDENTIFIER: 6>, None)
('(', 8, (218, 219), <TokenType.DIVIDER: 3>, None)
('sequence', 8, (219, 227), <TokenType.IDENTIFIER: 6>, None)
('[', 8, (227, 228), <TokenType.DIVIDER: 3>, None)
('i', 8, (228, 229), <TokenType.IDENTIFIER: 6>, None)
('-', 8, (0, 1), <TokenType.OPERATOR: 4>, None)
('1', 8, (0, 1), <TokenType.NUMBER_LITERAL: 2>, <_NumbersSubType.INTEGER: 0>)
(']', 8, (233, 234), <TokenType.DIVIDER: 3>, None)
('+', 8, (0, 1), <TokenType.OPERATOR: 4>, None)
('sequence', 8, (237, 245), <TokenType.IDENTIFIER: 6>, None)
('[', 8, (245, 246), <TokenType.DIVIDER: 3>, None)
('i', 8, (246, 247), <TokenType.IDENTIFIER: 6>, None)
('-', 8, (0, 1), <TokenType.OPERATOR: 4>, None)
('2', 8, (0, 1), <TokenType.NUMBER_LITERAL: 2>, <_NumbersSubType.INTEGER: 0>)
(']', 8, (251, 252), <TokenType.DIVIDER: 3>, None)
(')', 8, (252, 253), <TokenType.DIVIDER: 3>, None)
('\n', 0, (253, 254), <TokenType.ENTERS: 7>, None)
('return', 4, (258, 264), <TokenType.KEYWORD: 5>, None)
('sequence', 4, (265, 273), <TokenType.IDENTIFIER: 6>, None)
('\n', 0, (273, 274), <TokenType.ENTERS: 7>, None)
('def', 0, (275, 278), <TokenType.KEYWORD: 5>, None)
('find_min', 0, (279, 287), <TokenType.IDENTIFIER: 6>, None)
('(', 0, (287, 288), <TokenType.DIVIDER: 3>, None)
('a', 0, (288, 289), <TokenType.IDENTIFIER: 6>, None)
(',', 0, (289, 290), <TokenType.DIVIDER: 3>, None)
('length', 0, (291, 297), <TokenType.IDENTIFIER: 6>, None)
(')', 0, (297, 298), <TokenType.DIVIDER: 3>, None)
(':', 0, (298, 299), <TokenType.DIVIDER: 3>, None)
('\n', 0, (299, 300), <TokenType.ENTERS: 7>, None)
('m', 4, (304, 305), <TokenType.IDENTIFIER: 6>, None)
('=', 4, (306, 307), <TokenType.OPERATOR: 4>, None)
('a', 4, (308, 309), <TokenType.IDENTIFIER: 6>, None)
('[', 4, (309, 310), <TokenType.DIVIDER: 3>, None)
('0', 4, (0, 1), <TokenType.NUMBER_LITERAL: 2>, <_NumbersSubType.INTEGER: 0>)
(']', 4, (311, 312), <TokenType.DIVIDER: 3>, None)
('\n', 0, (312, 313), <TokenType.ENTERS: 7>, None)
('for', 4, (317, 320), <TokenType.KEYWORD: 5>, None)
('i', 4, (321, 322), <TokenType.IDENTIFIER: 6>, None)
('in', 4, (323, 325), <TokenType.OPERATOR: 4>, None)
('range', 4, (326, 331), <TokenType.IDENTIFIER: 6>, None)
('(', 4, (331, 332), <TokenType.DIVIDER: 3>, None)
('1', 4, (0, 1), <TokenType.NUMBER_LITERAL: 2>, <_NumbersSubType.INTEGER: 0>)
(',', 4, (333, 334), <TokenType.DIVIDER: 3>, None)
('length', 4, (335, 341), <TokenType.IDENTIFIER: 6>, None)
(')', 4, (341, 342), <TokenType.DIVIDER: 3>, None)
(':', 4, (342, 343), <TokenType.DIVIDER: 3>, None)
('\n', 0, (343, 344), <TokenType.ENTERS: 7>, None)
('if', 8, (352, 354), <TokenType.KEYWORD: 5>, None)
('a', 8, (355, 356), <TokenType.IDENTIFIER: 6>, None)
('[', 8, (356, 357), <TokenType.DIVIDER: 3>, None)
('i', 8, (357, 358), <TokenType.IDENTIFIER: 6>, None)
(']', 8, (358, 359), <TokenType.DIVIDER: 3>, None)
('<', 8, (360, 361), <TokenType.OPERATOR: 4>, None)
('m', 8, (362, 363), <TokenType.IDENTIFIER: 6>, None)
(':', 8, (363, 364), <TokenType.DIVIDER: 3>, None)
('\n', 0, (364, 365), <TokenType.ENTERS: 7>, None)
('m', 12, (377, 378), <TokenType.IDENTIFIER: 6>, None)
('=', 12, (379, 380), <TokenType.OPERATOR: 4>, None)
('a', 12, (381, 382), <TokenType.IDENTIFIER: 6>, None)
('[', 12, (382, 383), <TokenType.DIVIDER: 3>, None)
('i', 12, (383, 384), <TokenType.IDENTIFIER: 6>, None)
(']', 12, (384, 385), <TokenType.DIVIDER: 3>, None)
('\n', 0, (385, 386), <TokenType.ENTERS: 7>, None)
('return', 4, (390, 396), <TokenType.KEYWORD: 5>, None)
('m', 4, (397, 398), <TokenType.IDENTIFIER: 6>, None)
('\n', 0, (398, 399), <TokenType.ENTERS: 7>, None)
('print', 0, (400, 405), <TokenType.IDENTIFIER: 6>, None)
('(', 0, (405, 406), <TokenType.DIVIDER: 3>, None)
('fibbonachi', 0, (406, 416), <TokenType.IDENTIFIER: 6>, None)
('(', 0, (416, 417), <TokenType.DIVIDER: 3>, None)
('9', 0, (0, 1), <TokenType.NUMBER_LITERAL: 2>, <_NumbersSubType.INTEGER: 0>)
(')', 0, (418, 419), <TokenType.DIVIDER: 3>, None)
(')', 0, (419, 420), <TokenType.DIVIDER: 3>, None)
('\n', 0, (420, 421), <TokenType.ENTERS: 7>, None)
('print', 0, (421, 426), <TokenType.IDENTIFIER: 6>, None)
('(', 0, (426, 427), <TokenType.DIVIDER: 3>, None)
('find_min', 0, (427, 435), <TokenType.IDENTIFIER: 6>, None)
('(', 0, (435, 436), <TokenType.DIVIDER: 3>, None)
('[', 0, (436, 437), <TokenType.DIVIDER: 3>, None)
('9', 0, (0, 1), <TokenType.NUMBER_LITERAL: 2>, <_NumbersSubType.INTEGER: 0>)
(',', 0, (438, 439), <TokenType.DIVIDER: 3>, None)
('7', 0, (0, 1), <TokenType.NUMBER_LITERAL: 2>, <_NumbersSubType.INTEGER: 0>)
(',', 0, (441, 442), <TokenType.DIVIDER: 3>, None)
('2', 0, (0, 1), <TokenType.NUMBER_LITERAL: 2>, <_NumbersSubType.INTEGER: 0>)
(',', 0, (444, 445), <TokenType.DIVIDER: 3>, None)
('3', 0, (0, 1), <TokenType.NUMBER_LITERAL: 2>, <_NumbersSubType.INTEGER: 0>)
(',', 0, (447, 448), <TokenType.DIVIDER: 3>, None)
('5', 0, (0, 1), <TokenType.NUMBER_LITERAL: 2>, <_NumbersSubType.INTEGER: 0>)
(',', 0, (450, 451), <TokenType.DIVIDER: 3>, None)
('1', 0, (0, 1), <TokenType.NUMBER_LITERAL: 2>, <_NumbersSubType.INTEGER: 0>)
(']', 0, (453, 454), <TokenType.DIVIDER: 3>, None)
(',', 0, (454, 455), <TokenType.DIVIDER: 3>, None)
('6', 0, (0, 1), <TokenType.NUMBER_LITERAL: 2>, <_NumbersSubType.INTEGER: 0>)
(')', 0, (457, 458), <TokenType.DIVIDER: 3>, None)
(')', 0, (458, 459), <TokenType.DIVIDER: 3>, None)
('\n', 0, (459, 460), <TokenType.ENTERS: 7>, None)